{"version":3,"sources":["webpack://sweet-vibrations-gatsby/./src/pages/using-typescript.tsx"],"names":["data","path","title","site","buildTime","href","Link","to"],"mappings":"0LAyCA,UA5BwD,SAAC,GAAD,IAAEA,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OACpD,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC6C,sCAD7C,+DAEgD,yCAFhD,wEAKA,qEAC6C,wCAD7C,oBAEQ,wCAFR,gBAEwC,uCAFxC,UAIA,2DACoCD,EADpC,uBACgE,IAC1DD,EAAKG,KAAKC,UAFhB,KAIA,2DACqC,IACjC,qBAAGC,KAAK,6CAAR,kCAFJ,KAOA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT","file":"component---src-pages-using-typescript-tsx-75aa2e0e098d5f7539a4.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n    site: {\n        buildTime: string\n    }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({data, path}) => (\n    <Layout>\n        <Seo title=\"Using TypeScript\"/>\n        <h1>Gatsby supports TypeScript by default!</h1>\n        <p>\n            This means that you can create and write <em>.ts/.tsx</em> files for your\n            pages, components etc. Please note that the <em>gatsby-*.js</em> files\n            (like gatsby-node.js) currently don't support TypeScript yet.\n        </p>\n        <p>\n            For type checking you'll want to install <em>typescript</em> via npm and\n            run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n        </p>\n        <p>\n            You're currently on the page \"{ path }\" which was built on{ \" \" }\n            { data.site.buildTime }.\n        </p>\n        <p>\n            To learn more, head over to our{ \" \" }\n            <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n                documentation about TypeScript\n            </a>\n            .\n        </p>\n        <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"sourceRoot":""}